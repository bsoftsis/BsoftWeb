//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(BsoftWeb.BsoftDBEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets064a5341c6cd2be8fdb8c66576fd8e9fd23220d4fa4995393d5212d8d34cd04d))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets064a5341c6cd2be8fdb8c66576fd8e9fd23220d4fa4995393d5212d8d34cd04d : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "064a5341c6cd2be8fdb8c66576fd8e9fd23220d4fa4995393d5212d8d34cd04d"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "BsoftDBModelStoreContainer.Compra")
            {
                return GetView0();
            }

            if (extentName == "BsoftDBModelStoreContainer.Equipamiento")
            {
                return GetView1();
            }

            if (extentName == "BsoftDBModelStoreContainer.Localidad")
            {
                return GetView2();
            }

            if (extentName == "BsoftDBModelStoreContainer.PerfilUsuario")
            {
                return GetView3();
            }

            if (extentName == "BsoftDBModelStoreContainer.Proveedor")
            {
                return GetView4();
            }

            if (extentName == "BsoftDBModelStoreContainer.Provincia")
            {
                return GetView5();
            }

            if (extentName == "BsoftDBModelStoreContainer.Servicio")
            {
                return GetView6();
            }

            if (extentName == "BsoftDBModelStoreContainer.TecnicoProveedor")
            {
                return GetView7();
            }

            if (extentName == "BsoftDBModelStoreContainer.Usuario")
            {
                return GetView8();
            }

            if (extentName == "BsoftDBModelStoreContainer.DetalleCompra")
            {
                return GetView9();
            }

            if (extentName == "BsoftDBEntities.Compra")
            {
                return GetView10();
            }

            if (extentName == "BsoftDBEntities.Equipamiento")
            {
                return GetView11();
            }

            if (extentName == "BsoftDBEntities.Localidad")
            {
                return GetView12();
            }

            if (extentName == "BsoftDBEntities.PerfilUsuario")
            {
                return GetView13();
            }

            if (extentName == "BsoftDBEntities.Proveedor")
            {
                return GetView14();
            }

            if (extentName == "BsoftDBEntities.Provincia")
            {
                return GetView15();
            }

            if (extentName == "BsoftDBEntities.Servicio")
            {
                return GetView16();
            }

            if (extentName == "BsoftDBEntities.TecnicoProveedor")
            {
                return GetView17();
            }

            if (extentName == "BsoftDBEntities.Usuario")
            {
                return GetView18();
            }

            if (extentName == "BsoftDBEntities.DetalleCompra")
            {
                return GetView19();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for BsoftDBModelStoreContainer.Compra.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Compra
        [BsoftDBModel.Store.Compra](T1.Compra_idCompra, T1.Compra_fechaCompra, T1.Compra_nroComprobante, T1.Compra_estado, T1.Compra_fechaRegistro, T1.Compra_idProveedor, T1.Compra_idUsuario)
    FROM (
        SELECT 
            T.idCompra AS Compra_idCompra, 
            T.fechaCompra AS Compra_fechaCompra, 
            T.nroComprobante AS Compra_nroComprobante, 
            T.estado AS Compra_estado, 
            T.fechaRegistro AS Compra_fechaRegistro, 
            T.idProveedor AS Compra_idProveedor, 
            T.idUsuario AS Compra_idUsuario, 
            True AS _from0
        FROM BsoftDBEntities.Compra AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBModelStoreContainer.Equipamiento.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Equipamiento
        [BsoftDBModel.Store.Equipamiento](T1.Equipamiento_idEquipamiento, T1.Equipamiento_descripcion, T1.Equipamiento_stock, T1.Equipamiento_estado, T1.Equipamiento_fechaRegistro)
    FROM (
        SELECT 
            T.idEquipamiento AS Equipamiento_idEquipamiento, 
            T.descripcion AS Equipamiento_descripcion, 
            T.stock AS Equipamiento_stock, 
            T.estado AS Equipamiento_estado, 
            T.fechaRegistro AS Equipamiento_fechaRegistro, 
            True AS _from0
        FROM BsoftDBEntities.Equipamiento AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBModelStoreContainer.Localidad.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Localidad
        [BsoftDBModel.Store.Localidad](T1.Localidad_idLocalidad, T1.Localidad_nombreLocalidad, T1.Localidad_codigoPostal, T1.Localidad_idProvincia)
    FROM (
        SELECT 
            T.idLocalidad AS Localidad_idLocalidad, 
            T.nombreLocalidad AS Localidad_nombreLocalidad, 
            T.codigoPostal AS Localidad_codigoPostal, 
            T.idProvincia AS Localidad_idProvincia, 
            True AS _from0
        FROM BsoftDBEntities.Localidad AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBModelStoreContainer.PerfilUsuario.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PerfilUsuario
        [BsoftDBModel.Store.PerfilUsuario](T1.PerfilUsuario_idPerfilUsuario, T1.PerfilUsuario_descripcion, T1.PerfilUsuario_estado, T1.PerfilUsuario_fechaRegistro)
    FROM (
        SELECT 
            T.idPerfilUsuario AS PerfilUsuario_idPerfilUsuario, 
            T.descripcion AS PerfilUsuario_descripcion, 
            T.estado AS PerfilUsuario_estado, 
            T.fechaRegistro AS PerfilUsuario_fechaRegistro, 
            True AS _from0
        FROM BsoftDBEntities.PerfilUsuario AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBModelStoreContainer.Proveedor.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Proveedor
        [BsoftDBModel.Store.Proveedor](T1.Proveedor_idProveedor, T1.Proveedor_razonSocial, T1.Proveedor_cuit, T1.Proveedor_domicilio, T1.Proveedor_telefono, T1.Proveedor_celular, T1.Proveedor_email, T1.Proveedor_estado, T1.Proveedor_fechaRegistro, T1.Proveedor_idLocalidad)
    FROM (
        SELECT 
            T.idProveedor AS Proveedor_idProveedor, 
            T.razonSocial AS Proveedor_razonSocial, 
            T.cuit AS Proveedor_cuit, 
            T.domicilio AS Proveedor_domicilio, 
            T.telefono AS Proveedor_telefono, 
            T.celular AS Proveedor_celular, 
            T.email AS Proveedor_email, 
            T.estado AS Proveedor_estado, 
            T.fechaRegistro AS Proveedor_fechaRegistro, 
            T.idLocalidad AS Proveedor_idLocalidad, 
            True AS _from0
        FROM BsoftDBEntities.Proveedor AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBModelStoreContainer.Provincia.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Provincia
        [BsoftDBModel.Store.Provincia](T1.Provincia_idProvincia, T1.Provincia_nombreProvincia)
    FROM (
        SELECT 
            T.idProvincia AS Provincia_idProvincia, 
            T.nombreProvincia AS Provincia_nombreProvincia, 
            True AS _from0
        FROM BsoftDBEntities.Provincia AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBModelStoreContainer.Servicio.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Servicio
        [BsoftDBModel.Store.Servicio](T1.Servicio_idServicio, T1.Servicio_nroOrden, T1.Servicio_fechaInicio, T1.Servicio_plazo, T1.Servicio_fechaFin, T1.Servicio_descripcion, T1.Servicio_calidad, T1.Servicio_estado, T1.Servicio_fechaRegistro, T1.Servicio_idTecnicoProveedor, T1.Servicio_idUsuario)
    FROM (
        SELECT 
            T.idServicio AS Servicio_idServicio, 
            T.nroOrden AS Servicio_nroOrden, 
            T.fechaInicio AS Servicio_fechaInicio, 
            T.plazo AS Servicio_plazo, 
            T.fechaFin AS Servicio_fechaFin, 
            T.descripcion AS Servicio_descripcion, 
            T.calidad AS Servicio_calidad, 
            T.estado AS Servicio_estado, 
            T.fechaRegistro AS Servicio_fechaRegistro, 
            T.idTecnicoProveedor AS Servicio_idTecnicoProveedor, 
            T.idUsuario AS Servicio_idUsuario, 
            True AS _from0
        FROM BsoftDBEntities.Servicio AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBModelStoreContainer.TecnicoProveedor.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TecnicoProveedor
        [BsoftDBModel.Store.TecnicoProveedor](T1.TecnicoProveedor_idTecnicoProveedor, T1.TecnicoProveedor_nombre, T1.TecnicoProveedor_apellido, T1.TecnicoProveedor_cuil, T1.TecnicoProveedor_especialidad, T1.TecnicoProveedor_nivelEspecialidad, T1.TecnicoProveedor_estado, T1.TecnicoProveedor_fechaIngreso, T1.TecnicoProveedor_fechaEgreso, T1.TecnicoProveedor_fechaRegistro, T1.TecnicoProveedor_idProveedor)
    FROM (
        SELECT 
            T.idTecnicoProveedor AS TecnicoProveedor_idTecnicoProveedor, 
            T.nombre AS TecnicoProveedor_nombre, 
            T.apellido AS TecnicoProveedor_apellido, 
            T.cuil AS TecnicoProveedor_cuil, 
            T.especialidad AS TecnicoProveedor_especialidad, 
            T.nivelEspecialidad AS TecnicoProveedor_nivelEspecialidad, 
            T.estado AS TecnicoProveedor_estado, 
            T.fechaIngreso AS TecnicoProveedor_fechaIngreso, 
            T.fechaEgreso AS TecnicoProveedor_fechaEgreso, 
            T.fechaRegistro AS TecnicoProveedor_fechaRegistro, 
            T.idProveedor AS TecnicoProveedor_idProveedor, 
            True AS _from0
        FROM BsoftDBEntities.TecnicoProveedor AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBModelStoreContainer.Usuario.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Usuario
        [BsoftDBModel.Store.Usuario](T1.Usuario_idUsuario, T1.Usuario_nombreUsuario, T1.[Usuario_contraseña], T1.Usuario_email, T1.Usuario_estado, T1.Usuario_idPerfilUsuario, T1.Usuario_fechaRegistro)
    FROM (
        SELECT 
            T.idUsuario AS Usuario_idUsuario, 
            T.nombreUsuario AS Usuario_nombreUsuario, 
            T.[contraseña] AS [Usuario_contraseña], 
            T.email AS Usuario_email, 
            T.estado AS Usuario_estado, 
            T.idPerfilUsuario AS Usuario_idPerfilUsuario, 
            T.fechaRegistro AS Usuario_fechaRegistro, 
            True AS _from0
        FROM BsoftDBEntities.Usuario AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBModelStoreContainer.DetalleCompra.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DetalleCompra
        [BsoftDBModel.Store.DetalleCompra](T1.DetalleCompra_idCompra, T1.DetalleCompra_idEquipamiento, T1.DetalleCompra_cantidad, T1.DetalleCompra_plazoEntrega, T1.DetalleCompra_fechaEntrega, T1.DetalleCompra_calidad, T1.DetalleCompra_observaciones)
    FROM (
        SELECT 
            T.idCompra AS DetalleCompra_idCompra, 
            T.idEquipamiento AS DetalleCompra_idEquipamiento, 
            T.cantidad AS DetalleCompra_cantidad, 
            T.plazoEntrega AS DetalleCompra_plazoEntrega, 
            T.fechaEntrega AS DetalleCompra_fechaEntrega, 
            T.calidad AS DetalleCompra_calidad, 
            T.observaciones AS DetalleCompra_observaciones, 
            True AS _from0
        FROM BsoftDBEntities.DetalleCompra AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBEntities.Compra.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Compra
        [BsoftDBModel.Compra](T1.Compra_idCompra, T1.Compra_fechaCompra, T1.Compra_nroComprobante, T1.Compra_estado, T1.Compra_fechaRegistro, T1.Compra_idProveedor, T1.Compra_idUsuario)
    FROM (
        SELECT 
            T.idCompra AS Compra_idCompra, 
            T.fechaCompra AS Compra_fechaCompra, 
            T.nroComprobante AS Compra_nroComprobante, 
            T.estado AS Compra_estado, 
            T.fechaRegistro AS Compra_fechaRegistro, 
            T.idProveedor AS Compra_idProveedor, 
            T.idUsuario AS Compra_idUsuario, 
            True AS _from0
        FROM BsoftDBModelStoreContainer.Compra AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBEntities.Equipamiento.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Equipamiento
        [BsoftDBModel.Equipamiento](T1.Equipamiento_idEquipamiento, T1.Equipamiento_descripcion, T1.Equipamiento_stock, T1.Equipamiento_estado, T1.Equipamiento_fechaRegistro)
    FROM (
        SELECT 
            T.idEquipamiento AS Equipamiento_idEquipamiento, 
            T.descripcion AS Equipamiento_descripcion, 
            T.stock AS Equipamiento_stock, 
            T.estado AS Equipamiento_estado, 
            T.fechaRegistro AS Equipamiento_fechaRegistro, 
            True AS _from0
        FROM BsoftDBModelStoreContainer.Equipamiento AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBEntities.Localidad.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Localidad
        [BsoftDBModel.Localidad](T1.Localidad_idLocalidad, T1.Localidad_nombreLocalidad, T1.Localidad_codigoPostal, T1.Localidad_idProvincia)
    FROM (
        SELECT 
            T.idLocalidad AS Localidad_idLocalidad, 
            T.nombreLocalidad AS Localidad_nombreLocalidad, 
            T.codigoPostal AS Localidad_codigoPostal, 
            T.idProvincia AS Localidad_idProvincia, 
            True AS _from0
        FROM BsoftDBModelStoreContainer.Localidad AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBEntities.PerfilUsuario.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PerfilUsuario
        [BsoftDBModel.PerfilUsuario](T1.PerfilUsuario_idPerfilUsuario, T1.PerfilUsuario_descripcion, T1.PerfilUsuario_estado, T1.PerfilUsuario_fechaRegistro)
    FROM (
        SELECT 
            T.idPerfilUsuario AS PerfilUsuario_idPerfilUsuario, 
            T.descripcion AS PerfilUsuario_descripcion, 
            T.estado AS PerfilUsuario_estado, 
            T.fechaRegistro AS PerfilUsuario_fechaRegistro, 
            True AS _from0
        FROM BsoftDBModelStoreContainer.PerfilUsuario AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBEntities.Proveedor.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Proveedor
        [BsoftDBModel.Proveedor](T1.Proveedor_idProveedor, T1.Proveedor_razonSocial, T1.Proveedor_cuit, T1.Proveedor_domicilio, T1.Proveedor_telefono, T1.Proveedor_celular, T1.Proveedor_email, T1.Proveedor_estado, T1.Proveedor_fechaRegistro, T1.Proveedor_idLocalidad)
    FROM (
        SELECT 
            T.idProveedor AS Proveedor_idProveedor, 
            T.razonSocial AS Proveedor_razonSocial, 
            T.cuit AS Proveedor_cuit, 
            T.domicilio AS Proveedor_domicilio, 
            T.telefono AS Proveedor_telefono, 
            T.celular AS Proveedor_celular, 
            T.email AS Proveedor_email, 
            T.estado AS Proveedor_estado, 
            T.fechaRegistro AS Proveedor_fechaRegistro, 
            T.idLocalidad AS Proveedor_idLocalidad, 
            True AS _from0
        FROM BsoftDBModelStoreContainer.Proveedor AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBEntities.Provincia.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Provincia
        [BsoftDBModel.Provincia](T1.Provincia_idProvincia, T1.Provincia_nombreProvincia)
    FROM (
        SELECT 
            T.idProvincia AS Provincia_idProvincia, 
            T.nombreProvincia AS Provincia_nombreProvincia, 
            True AS _from0
        FROM BsoftDBModelStoreContainer.Provincia AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBEntities.Servicio.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Servicio
        [BsoftDBModel.Servicio](T1.Servicio_idServicio, T1.Servicio_nroOrden, T1.Servicio_fechaInicio, T1.Servicio_plazo, T1.Servicio_fechaFin, T1.Servicio_descripcion, T1.Servicio_calidad, T1.Servicio_estado, T1.Servicio_fechaRegistro, T1.Servicio_idTecnicoProveedor, T1.Servicio_idUsuario)
    FROM (
        SELECT 
            T.idServicio AS Servicio_idServicio, 
            T.nroOrden AS Servicio_nroOrden, 
            T.fechaInicio AS Servicio_fechaInicio, 
            T.plazo AS Servicio_plazo, 
            T.fechaFin AS Servicio_fechaFin, 
            T.descripcion AS Servicio_descripcion, 
            T.calidad AS Servicio_calidad, 
            T.estado AS Servicio_estado, 
            T.fechaRegistro AS Servicio_fechaRegistro, 
            T.idTecnicoProveedor AS Servicio_idTecnicoProveedor, 
            T.idUsuario AS Servicio_idUsuario, 
            True AS _from0
        FROM BsoftDBModelStoreContainer.Servicio AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBEntities.TecnicoProveedor.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TecnicoProveedor
        [BsoftDBModel.TecnicoProveedor](T1.TecnicoProveedor_idTecnicoProveedor, T1.TecnicoProveedor_nombre, T1.TecnicoProveedor_apellido, T1.TecnicoProveedor_cuil, T1.TecnicoProveedor_especialidad, T1.TecnicoProveedor_nivelEspecialidad, T1.TecnicoProveedor_estado, T1.TecnicoProveedor_fechaIngreso, T1.TecnicoProveedor_fechaEgreso, T1.TecnicoProveedor_fechaRegistro, T1.TecnicoProveedor_idProveedor)
    FROM (
        SELECT 
            T.idTecnicoProveedor AS TecnicoProveedor_idTecnicoProveedor, 
            T.nombre AS TecnicoProveedor_nombre, 
            T.apellido AS TecnicoProveedor_apellido, 
            T.cuil AS TecnicoProveedor_cuil, 
            T.especialidad AS TecnicoProveedor_especialidad, 
            T.nivelEspecialidad AS TecnicoProveedor_nivelEspecialidad, 
            T.estado AS TecnicoProveedor_estado, 
            T.fechaIngreso AS TecnicoProveedor_fechaIngreso, 
            T.fechaEgreso AS TecnicoProveedor_fechaEgreso, 
            T.fechaRegistro AS TecnicoProveedor_fechaRegistro, 
            T.idProveedor AS TecnicoProveedor_idProveedor, 
            True AS _from0
        FROM BsoftDBModelStoreContainer.TecnicoProveedor AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBEntities.Usuario.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Usuario
        [BsoftDBModel.Usuario](T1.Usuario_idUsuario, T1.Usuario_nombreUsuario, T1.[Usuario_contraseña], T1.Usuario_email, T1.Usuario_estado, T1.Usuario_idPerfilUsuario, T1.Usuario_fechaRegistro)
    FROM (
        SELECT 
            T.idUsuario AS Usuario_idUsuario, 
            T.nombreUsuario AS Usuario_nombreUsuario, 
            T.[contraseña] AS [Usuario_contraseña], 
            T.email AS Usuario_email, 
            T.estado AS Usuario_estado, 
            T.idPerfilUsuario AS Usuario_idPerfilUsuario, 
            T.fechaRegistro AS Usuario_fechaRegistro, 
            True AS _from0
        FROM BsoftDBModelStoreContainer.Usuario AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BsoftDBEntities.DetalleCompra.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DetalleCompra
        [BsoftDBModel.DetalleCompra](T1.DetalleCompra_idCompra, T1.DetalleCompra_idEquipamiento, T1.DetalleCompra_cantidad, T1.DetalleCompra_plazoEntrega, T1.DetalleCompra_fechaEntrega, T1.DetalleCompra_calidad, T1.DetalleCompra_observaciones)
    FROM (
        SELECT 
            T.idCompra AS DetalleCompra_idCompra, 
            T.idEquipamiento AS DetalleCompra_idEquipamiento, 
            T.cantidad AS DetalleCompra_cantidad, 
            T.plazoEntrega AS DetalleCompra_plazoEntrega, 
            T.fechaEntrega AS DetalleCompra_fechaEntrega, 
            T.calidad AS DetalleCompra_calidad, 
            T.observaciones AS DetalleCompra_observaciones, 
            True AS _from0
        FROM BsoftDBModelStoreContainer.DetalleCompra AS T
    ) AS T1");
        }
    }
}
